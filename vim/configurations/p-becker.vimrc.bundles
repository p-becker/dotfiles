if &compatible
  set nocompatible
end

call plug#begin(expand(fnameescape(g:home_path)).'/.vim/bundle')

" Define bundles via Github repos
Plug '/usr/local/opt/fzf'
Plug 'junegunn/fzf.vim'

" On-demand loading
Plug 'scrooloose/nerdtree', { 'on':  'NERDTreeToggle' }

Plug 'tpope/vim-surround'

Plug 'w0rp/ale'

"Plug 'ruanyl/coverage.vim'

Plug 'janko-m/vim-test'

Plug 'tpope/vim-fugitive'

Plug 'benmills/vimux'

Plug 'tpope/vim-dispatch'

Plug 'pangloss/vim-javascript'

Plug 'mxw/vim-jsx'

Plug 'tpope/vim-unimpaired'

Plug 'scrooloose/nerdcommenter'

Plug 'vim-ruby/vim-ruby'

Plug 'tpope/vim-rails'

Plug 'tpope/vim-rbenv'

Plug 'tpope/vim-bundler'

Plug 'KeitaNakamura/neodark.vim'

"Plug 'elmcast/elm-vim'

Plug 'mdxprograms/elm-vim'

Plug 'vim-airline/vim-airline'

Plug 'maxbrunsfeld/vim-yankstack'
Plug 'tpope/vim-repeat'

Plug 'Shougo/denite.nvim'

Plug 'ap/vim-css-color'

Plug 'andreshazard/vim-freemarker'

Plug 'airblade/vim-localorie'

"Plug 'vimwiki/vimwiki'

Plug 'junegunn/vim-peekaboo'

"Plug 'ludovicchabant/vim-gutentags'

Plug 'lervag/vimtex'

Plug 'machakann/vim-highlightedyank'

Plug 'HerringtonDarkholme/yats.vim'

Plug 'mhartington/nvim-typescript'

if has('nvim')
  Plug 'Shougo/deoplete.nvim', { 'do': ':UpdateRemotePlugins' }
else
  Plug 'Shougo/deoplete.nvim'
  Plug 'roxma/nvim-yarp'
  Plug 'roxma/vim-hug-neovim-rpc'
endif
let deoplete_config = expand(fnameescape(dotfiles_path)."/vim/configurations/p-becker.deoplete.vim")
if filereadable(deoplete_config)
  exec "source " . g:deoplete_config
end

Plug 'autozimu/LanguageClient-neovim', {
    \ 'branch': 'next',
    \ 'do': 'bash install.sh',
    \ }
"let g:LanguageClient_autoStop = 0
"let g:LanguageClient_serverCommands = {
    "\ 'ruby': ['tcp://localhost:7658']
    "\ }
nnoremap <silent> gd :call LanguageClient#textDocument_definition()<CR>
nnoremap <silent> ,r :call LanguageClient#textDocument_rename()<CR>
nnoremap <silent> ,fs :call LanguageClient#textDocument_documentSymbol()<CR>
nnoremap <silent> ,fr :call LanguageClient#textDocument_references()<CR>
nnoremap <silent> ,vd :call LanguageClient#textDocument_hover()<CR>

Plug 'ionide/Ionide-vim', {
      \ 'do':  'make fsautocomplete',
      \}

Plug 'shime/vim-livedown'

Plug 'osyo-manga/vim-anzu'

Plug 'SirVer/ultisnips'
Plug 'honza/vim-snippets'
let g:UltiSnipsSnippetsDir = "~/.vim/bundle/vim-snippets/snippets"

Plug 'OmniSharp/omnisharp-vim'
call plug#end()
